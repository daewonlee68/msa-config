server:
  port: 8080

spring:
  application:
    name: producer-service
  main:
    allow-bean-definition-overriding: true
  profiles:
    active:
      on-profile: dev
  cloud:
    discovery:
      enabled: false      
  redis:
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 2
    port: 16379
    host: dev-elasticache-replication-group.ikmdkh.ng.0001.apn2.cache.amazonaws.com

jdbc:
  url: jdbc:log4jdbc:postgresql://10.10.5.183:5432/cenlotsdb01?charSet=UTF-8&prepareThreshold=1&serverTimezone=Asia/Seoul
  username: cenadm01
  password: cenlotaws123!
  driverClassName: net.sf.log4jdbc.sql.jdbcapi.DriverSpy

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 5                #circuit Breaker가 열리기 전의 슬라이딩 윈도우 크기 (여기서는 5번의 호출)
        failureRateThreshold: 50            #실패율 임계값 (여기서는 50%).
        waitDurationInOpenState: 10s      #Circuit Breaker가 열린 상태에서 닫힌 상태로 돌아가기 전까지 대기하는 시간 (여기서는 10초).
        permittedNumberOfCallsInHalfOpenState: 3    #반열림 상태에서 허용되는 호출 수
        minimumNumberOfCalls: 5
        recordExceptions:
            - org.springframework.web.client.HttpServerErrorException
            - java.util.concurrent.TimeoutException
            - java.io.IOException
 #       ignoreExceptions:
 #           - io.github.robwin.exception.BusinessException
    shared:
        slidingWindowSize: 100
        permittedNumberOfCallsInHalfOpenState: 30
        waitDurationInOpenState: 3s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        ignoreExceptions:
            - io.github.robwin.exception.BusinessException
    instances:
      reqMngTcktSusValidateApiCircuitBreaker:
        baseConfig: default

management:
  endpoints:
    web:
      exposure:
        include: "*"  # 모든 Actuator 엔드포인트 활성화
    health:
      show-details: never
  health:
    db:
      enabled: false

#eureka:
#  client:
#    register-with-eureka: false  # 자신을 Eureka에 등록하지 않음
#    fetch-registry: false

#eureka:
#  instance:
#    prefer-ip-address: true
#    hostname: cenlots2024-discoveryserver-service
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}/eureka/
